---
source: tests/integration/languages/extractor.rs
expression: "serde_json::to_string_pretty(&snapshot_data).unwrap()"
---
{
  "chunks": [
    {
      "chunk_type": "File",
      "comment_ranges": [
        [
          31,
          50
        ],
        [
          128,
          143
        ],
        [
          166,
          183
        ],
        [
          274,
          287
        ],
        [
          311,
          330
        ]
      ],
      "content": "package main\n\nimport \"errors\"\n\n// Const block test\nconst (\n    StatusOK = 200\n    StatusNotFound = 404\n    StatusError = 500\n)\n\n// Single const\nconst MaxRetries = 3\n\n// Var block test\nvar (\n    ErrNotFound = errors.New(\"not found\")\n    ErrTimeout = errors.New(\"timeout\")\n)\n\n// Single var\nvar GlobalCounter int\n\n// Type alias tests\ntype UserID int64\ntype Handler func(string, string)\ntype Point struct {\n    X, Y int\n}\n\nfunc main() {}\n",
      "end_line": 31,
      "language": "go",
      "name": "entire_file",
      "original_indentation": 0,
      "start_line": 1
    },
    {
      "chunk_type": "Const",
      "comment_ranges": [],
      "content": "const (\n    StatusOK = 200\n    StatusNotFound = 404\n    StatusError = 500\n)",
      "end_line": 10,
      "language": "go",
      "name": "StatusOK, StatusNotFound, StatusError (3)",
      "original_indentation": 0,
      "start_line": 6
    },
    {
      "chunk_type": "Const",
      "comment_ranges": [],
      "content": "const MaxRetries = 3",
      "end_line": 13,
      "language": "go",
      "name": "MaxRetries",
      "original_indentation": 0,
      "start_line": 13
    },
    {
      "chunk_type": "Variable",
      "comment_ranges": [],
      "content": "var (\n    ErrNotFound = errors.New(\"not found\")\n    ErrTimeout = errors.New(\"timeout\")\n)",
      "end_line": 19,
      "language": "go",
      "name": "var_block",
      "original_indentation": 0,
      "start_line": 16
    },
    {
      "chunk_type": "Variable",
      "comment_ranges": [],
      "content": "var GlobalCounter int",
      "end_line": 22,
      "language": "go",
      "name": "GlobalCounter",
      "original_indentation": 0,
      "start_line": 22
    },
    {
      "chunk_type": "TypeAlias",
      "comment_ranges": [],
      "content": "type UserID int64",
      "end_line": 25,
      "language": "go",
      "name": "UserID",
      "original_indentation": 5,
      "start_line": 25
    },
    {
      "chunk_type": "TypeAlias",
      "comment_ranges": [],
      "content": "type Handler func(string, string)",
      "end_line": 26,
      "language": "go",
      "name": "Handler",
      "original_indentation": 5,
      "start_line": 26
    },
    {
      "chunk_type": "Struct",
      "comment_ranges": [],
      "content": "type Point struct {\n    X, Y int\n}",
      "end_line": 29,
      "language": "go",
      "name": "Point",
      "original_indentation": 5,
      "start_line": 27
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "func main() {}",
      "end_line": 31,
      "language": "go",
      "name": "main",
      "original_indentation": 0,
      "start_line": 31
    }
  ],
  "source_code": "package main\n\nimport \"errors\"\n\n// Const block test\nconst (\n    StatusOK = 200\n    StatusNotFound = 404\n    StatusError = 500\n)\n\n// Single const\nconst MaxRetries = 3\n\n// Var block test\nvar (\n    ErrNotFound = errors.New(\"not found\")\n    ErrTimeout = errors.New(\"timeout\")\n)\n\n// Single var\nvar GlobalCounter int\n\n// Type alias tests\ntype UserID int64\ntype Handler func(string, string)\ntype Point struct {\n    X, Y int\n}\n\nfunc main() {}\n",
  "test_name": "test_go_const_var_type_alias_extraction",
  "total_chunks": 9
}
