---
source: tests/integration/languages/extractor.rs
expression: "serde_json::to_string_pretty(&snapshot_data).unwrap()"
---
{
  "chunks": [
    {
      "chunk_type": "Interface",
      "comment_ranges": [],
      "content": "public interface Drawable {\n    void draw();\n    void setColor(String color);\n    String getColor();\n}",
      "end_line": 5,
      "language": "java",
      "name": "Drawable",
      "original_indentation": 0,
      "start_line": 1
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "    void draw();",
      "end_line": 2,
      "language": "java",
      "name": "draw",
      "original_indentation": 4,
      "start_line": 2
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "    void setColor(String color);",
      "end_line": 3,
      "language": "java",
      "name": "setColor",
      "original_indentation": 4,
      "start_line": 3
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "    String getColor();",
      "end_line": 4,
      "language": "java",
      "name": "getColor",
      "original_indentation": 4,
      "start_line": 4
    },
    {
      "chunk_type": "Interface",
      "comment_ranges": [],
      "content": "public interface Resizable {\n    void resize(int width, int height);\n    int getWidth();\n    int getHeight();\n}",
      "end_line": 11,
      "language": "java",
      "name": "Resizable",
      "original_indentation": 0,
      "start_line": 7
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "    void resize(int width, int height);",
      "end_line": 8,
      "language": "java",
      "name": "resize",
      "original_indentation": 4,
      "start_line": 8
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "    int getWidth();",
      "end_line": 9,
      "language": "java",
      "name": "getWidth",
      "original_indentation": 4,
      "start_line": 9
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "    int getHeight();",
      "end_line": 10,
      "language": "java",
      "name": "getHeight",
      "original_indentation": 4,
      "start_line": 10
    },
    {
      "chunk_type": "Class",
      "comment_ranges": [],
      "content": "public class Circle implements Drawable, Resizable {\n    private String color;\n    private int radius;\n\n    @Override\n    public void draw() {\n        System.out.println(\"Drawing a \" + color + \" circle\");\n    }\n\n    @Override\n    public void setColor(String color) {\n        this.color = color;\n    }\n\n    @Override\n    public String getColor() {\n        return this.color;\n    }\n\n    @Override\n    public void resize(int width, int height) {\n        this.radius = Math.min(width, height) / 2;\n    }\n\n    @Override\n    public int getWidth() {\n        return radius * 2;\n    }\n\n    @Override\n    public int getHeight() {\n        return radius * 2;\n    }\n}",
      "end_line": 46,
      "language": "java",
      "name": "Circle",
      "original_indentation": 0,
      "start_line": 13
    },
    {
      "chunk_type": "Variable",
      "comment_ranges": [],
      "content": "    private String color;",
      "end_line": 14,
      "language": "java",
      "name": "color",
      "original_indentation": 4,
      "start_line": 14
    },
    {
      "chunk_type": "Variable",
      "comment_ranges": [],
      "content": "    private int radius;",
      "end_line": 15,
      "language": "java",
      "name": "radius",
      "original_indentation": 4,
      "start_line": 15
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "    @Override\n    public void draw() {\n        System.out.println(\"Drawing a \" + color + \" circle\");\n    }",
      "end_line": 20,
      "language": "java",
      "name": "draw",
      "original_indentation": 4,
      "start_line": 17
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    public void draw() {\n        System.out.println(\"Drawing a \" + color + \" circle\");\n    }",
      "end_line": 20,
      "language": "java",
      "name": "code_block",
      "original_indentation": 23,
      "start_line": 18
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "    @Override\n    public void setColor(String color) {\n        this.color = color;\n    }",
      "end_line": 25,
      "language": "java",
      "name": "setColor",
      "original_indentation": 4,
      "start_line": 22
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    public void setColor(String color) {\n        this.color = color;\n    }",
      "end_line": 25,
      "language": "java",
      "name": "code_block",
      "original_indentation": 39,
      "start_line": 23
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "    @Override\n    public String getColor() {\n        return this.color;\n    }",
      "end_line": 30,
      "language": "java",
      "name": "getColor",
      "original_indentation": 4,
      "start_line": 27
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    public String getColor() {\n        return this.color;\n    }",
      "end_line": 30,
      "language": "java",
      "name": "code_block",
      "original_indentation": 29,
      "start_line": 28
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "    @Override\n    public void resize(int width, int height) {\n        this.radius = Math.min(width, height) / 2;\n    }",
      "end_line": 35,
      "language": "java",
      "name": "resize",
      "original_indentation": 4,
      "start_line": 32
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    public void resize(int width, int height) {\n        this.radius = Math.min(width, height) / 2;\n    }",
      "end_line": 35,
      "language": "java",
      "name": "code_block",
      "original_indentation": 46,
      "start_line": 33
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "    @Override\n    public int getWidth() {\n        return radius * 2;\n    }",
      "end_line": 40,
      "language": "java",
      "name": "getWidth",
      "original_indentation": 4,
      "start_line": 37
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    public int getWidth() {\n        return radius * 2;\n    }",
      "end_line": 40,
      "language": "java",
      "name": "code_block",
      "original_indentation": 26,
      "start_line": 38
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "    @Override\n    public int getHeight() {\n        return radius * 2;\n    }",
      "end_line": 45,
      "language": "java",
      "name": "getHeight",
      "original_indentation": 4,
      "start_line": 42
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    public int getHeight() {\n        return radius * 2;\n    }",
      "end_line": 45,
      "language": "java",
      "name": "code_block",
      "original_indentation": 27,
      "start_line": 43
    }
  ],
  "source_code": "public interface Drawable {\n    void draw();\n    void setColor(String color);\n    String getColor();\n}\n\npublic interface Resizable {\n    void resize(int width, int height);\n    int getWidth();\n    int getHeight();\n}\n\npublic class Circle implements Drawable, Resizable {\n    private String color;\n    private int radius;\n\n    @Override\n    public void draw() {\n        System.out.println(\"Drawing a \" + color + \" circle\");\n    }\n\n    @Override\n    public void setColor(String color) {\n        this.color = color;\n    }\n\n    @Override\n    public String getColor() {\n        return this.color;\n    }\n\n    @Override\n    public void resize(int width, int height) {\n        this.radius = Math.min(width, height) / 2;\n    }\n\n    @Override\n    public int getWidth() {\n        return radius * 2;\n    }\n\n    @Override\n    public int getHeight() {\n        return radius * 2;\n    }\n}",
  "test_name": "test_java_interface_extraction",
  "total_chunks": 23
}
