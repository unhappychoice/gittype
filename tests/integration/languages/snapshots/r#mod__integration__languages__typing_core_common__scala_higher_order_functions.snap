---
source: tests/integration/languages/typing_core_common.rs
expression: snapshot
---
# text_original
def processData[T](data: List[T], processor: T => String): List[String] = {
    // Apply processor function to each element
    data.map { item =>
        /* Process each item individually
           Using the provided processor function */
        processor(item)
    }.filter(_.nonEmpty) // Filter out empty results
}

# text_to_type
def processData[T](data: List[T], processor: T => String): List[String] = {
data.map { item =>
processor(item)
}.filter(_.nonEmpty)
}

# text_to_display
def processData[T](data: List[T], processor: T => String): List[String] = {↵
    // Apply processor function to each element
    data.map { item =>↵
        /* Process each item individually
           Using the provided processor function */
        processor(item)↵
    }.filter(_.nonEmpty)↵ // Filter out empty results
}↵
