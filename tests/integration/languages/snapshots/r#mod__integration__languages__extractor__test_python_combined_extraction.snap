---
source: tests/integration/languages/extractor.rs
expression: "serde_json::to_string_pretty(&snapshot_data).unwrap()"
---
{
  "chunks": [
    {
      "chunk_type": "File",
      "comment_ranges": [
        [
          1,
          24
        ],
        [
          76,
          94
        ],
        [
          275,
          290
        ],
        [
          470,
          488
        ]
      ],
      "content": "\n# Module-level function\ndef calculate_total(items):\n    return sum(items)\n\n# Class definition\nclass User:\n    def __init__(self, name, email):\n        self.name = name\n        self.email = email\n\n    def get_display_name(self):\n        return f\"{self.name} ({self.email})\"\n\n# Another class\nclass Database:\n    def __init__(self):\n        self.connections = []\n\n    def connect(self):\n        return \"Connected\"\n\n    def disconnect(self):\n        print(\"Disconnected\")\n\n# Another function\ndef process_data(data):\n    return [item.upper() for item in data]\n",
      "end_line": 28,
      "language": "python",
      "name": "entire_file",
      "original_indentation": 0,
      "start_line": 1
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "def calculate_total",
      "end_line": 3,
      "language": "python",
      "name": "name",
      "original_indentation": 4,
      "start_line": 3
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "def calculate_total(items):\n    return sum(items)",
      "end_line": 4,
      "language": "python",
      "name": "function",
      "original_indentation": 0,
      "start_line": 3
    },
    {
      "chunk_type": "Class",
      "comment_ranges": [],
      "content": "class User:\n    def __init__(self, name, email):\n        self.name = name\n        self.email = email\n\n    def get_display_name(self):\n        return f\"{self.name} ({self.email})\"",
      "end_line": 13,
      "language": "python",
      "name": "class",
      "original_indentation": 0,
      "start_line": 7
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    def __init__(self, name, email):\n        self.name = name\n        self.email = email",
      "end_line": 10,
      "language": "python",
      "name": "function",
      "original_indentation": 4,
      "start_line": 8
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    def get_display_name",
      "end_line": 12,
      "language": "python",
      "name": "name",
      "original_indentation": 8,
      "start_line": 12
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    def get_display_name(self):\n        return f\"{self.name} ({self.email})\"",
      "end_line": 13,
      "language": "python",
      "name": "function",
      "original_indentation": 4,
      "start_line": 12
    },
    {
      "chunk_type": "Class",
      "comment_ranges": [],
      "content": "class Database:\n    def __init__(self):\n        self.connections = []\n\n    def connect(self):\n        return \"Connected\"\n\n    def disconnect(self):\n        print(\"Disconnected\")",
      "end_line": 24,
      "language": "python",
      "name": "class",
      "original_indentation": 0,
      "start_line": 16
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    def __init__(self):\n        self.connections = []",
      "end_line": 18,
      "language": "python",
      "name": "function",
      "original_indentation": 4,
      "start_line": 17
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    def connect(self):\n        return \"Connected\"",
      "end_line": 21,
      "language": "python",
      "name": "function",
      "original_indentation": 4,
      "start_line": 20
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    def disconnect",
      "end_line": 23,
      "language": "python",
      "name": "name",
      "original_indentation": 8,
      "start_line": 23
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    def disconnect(self):\n        print(\"Disconnected\")",
      "end_line": 24,
      "language": "python",
      "name": "function",
      "original_indentation": 4,
      "start_line": 23
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "def process_data",
      "end_line": 27,
      "language": "python",
      "name": "name",
      "original_indentation": 4,
      "start_line": 27
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "def process_data(data):\n    return [item.upper() for item in data]",
      "end_line": 28,
      "language": "python",
      "name": "function",
      "original_indentation": 0,
      "start_line": 27
    }
  ],
  "source_code": "\n# Module-level function\ndef calculate_total(items):\n    return sum(items)\n\n# Class definition\nclass User:\n    def __init__(self, name, email):\n        self.name = name\n        self.email = email\n\n    def get_display_name(self):\n        return f\"{self.name} ({self.email})\"\n\n# Another class\nclass Database:\n    def __init__(self):\n        self.connections = []\n\n    def connect(self):\n        return \"Connected\"\n\n    def disconnect(self):\n        print(\"Disconnected\")\n\n# Another function\ndef process_data(data):\n    return [item.upper() for item in data]\n",
  "test_name": "test_python_combined_extraction",
  "total_chunks": 14
}
