---
source: tests/integration/languages/extractor.rs
expression: "serde_json::to_string_pretty(&snapshot_data).unwrap()"
---
{
  "chunks": [
    {
      "chunk_type": "File",
      "comment_ranges": [],
      "content": "\nusing System;\nusing System.Threading.Tasks;\n\nnamespace MyApplication.Contracts\n{\n    public interface IUserRepository\n    {\n        Task<User> GetByIdAsync(int id);\n        Task<IEnumerable<User>> GetAllAsync();\n        Task<bool> ExistsAsync(int id);\n    }\n\n    public interface IEmailService\n    {\n        Task SendEmailAsync(string to, string subject, string body);\n        Task<bool> ValidateEmailAsync(string email);\n    }\n}\n",
      "end_line": 19,
      "language": "csharp",
      "name": "entire_file",
      "original_indentation": 0,
      "start_line": 1
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "namespace MyApplication.Contracts",
      "end_line": 5,
      "language": "csharp",
      "name": "MyApplication",
      "original_indentation": 10,
      "start_line": 5
    },
    {
      "chunk_type": "Namespace",
      "comment_ranges": [],
      "content": "namespace MyApplication.Contracts\n{\n    public interface IUserRepository\n    {\n        Task<User> GetByIdAsync(int id);\n        Task<IEnumerable<User>> GetAllAsync();\n        Task<bool> ExistsAsync(int id);\n    }\n\n    public interface IEmailService\n    {\n        Task SendEmailAsync(string to, string subject, string body);\n        Task<bool> ValidateEmailAsync(string email);\n    }\n}",
      "end_line": 19,
      "language": "csharp",
      "name": "MyApplication.Contracts",
      "original_indentation": 0,
      "start_line": 5
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    public interface IUserRepository",
      "end_line": 7,
      "language": "csharp",
      "name": "name",
      "original_indentation": 21,
      "start_line": 7
    },
    {
      "chunk_type": "Interface",
      "comment_ranges": [],
      "content": "    public interface IUserRepository\n    {\n        Task<User> GetByIdAsync(int id);\n        Task<IEnumerable<User>> GetAllAsync();\n        Task<bool> ExistsAsync(int id);\n    }",
      "end_line": 12,
      "language": "csharp",
      "name": "IUserRepository",
      "original_indentation": 4,
      "start_line": 7
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "        Task<User> GetByIdAsync(int id);",
      "end_line": 9,
      "language": "csharp",
      "name": "GetByIdAsync",
      "original_indentation": 8,
      "start_line": 9
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "        Task<IEnumerable<User>> GetAllAsync();",
      "end_line": 10,
      "language": "csharp",
      "name": "GetAllAsync",
      "original_indentation": 8,
      "start_line": 10
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "        Task<bool> ExistsAsync(int id);",
      "end_line": 11,
      "language": "csharp",
      "name": "ExistsAsync",
      "original_indentation": 8,
      "start_line": 11
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    public interface IEmailService",
      "end_line": 14,
      "language": "csharp",
      "name": "name",
      "original_indentation": 21,
      "start_line": 14
    },
    {
      "chunk_type": "Interface",
      "comment_ranges": [],
      "content": "    public interface IEmailService\n    {\n        Task SendEmailAsync(string to, string subject, string body);\n        Task<bool> ValidateEmailAsync(string email);\n    }",
      "end_line": 18,
      "language": "csharp",
      "name": "IEmailService",
      "original_indentation": 4,
      "start_line": 14
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "        Task SendEmailAsync(string to, string subject, string body);",
      "end_line": 16,
      "language": "csharp",
      "name": "Task",
      "original_indentation": 8,
      "start_line": 16
    },
    {
      "chunk_type": "Method",
      "comment_ranges": [],
      "content": "        Task<bool> ValidateEmailAsync(string email);",
      "end_line": 17,
      "language": "csharp",
      "name": "ValidateEmailAsync",
      "original_indentation": 8,
      "start_line": 17
    }
  ],
  "source_code": "\nusing System;\nusing System.Threading.Tasks;\n\nnamespace MyApplication.Contracts\n{\n    public interface IUserRepository\n    {\n        Task<User> GetByIdAsync(int id);\n        Task<IEnumerable<User>> GetAllAsync();\n        Task<bool> ExistsAsync(int id);\n    }\n\n    public interface IEmailService\n    {\n        Task SendEmailAsync(string to, string subject, string body);\n        Task<bool> ValidateEmailAsync(string email);\n    }\n}\n",
  "test_name": "test_csharp_interface_extraction",
  "total_chunks": 12
}
