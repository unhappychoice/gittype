---
source: tests/integration/languages/extractor.rs
expression: "serde_json::to_string_pretty(&snapshot_data).unwrap()"
---
{
  "chunks": [
    {
      "chunk_type": "File",
      "comment_ranges": [],
      "content": "\nenum Direction {\n    case north, south, east, west\n\n    func opposite() -> Direction {\n        switch self {\n        case .north: return .south\n        case .south: return .north\n        case .east: return .west\n        case .west: return .east\n        }\n    }\n}\n\nenum Status {\n    case pending\n    case completed\n    case failed\n}\n",
      "end_line": 19,
      "language": "swift",
      "name": "entire_file",
      "original_indentation": 0,
      "start_line": 1
    },
    {
      "chunk_type": "Class",
      "comment_ranges": [],
      "content": "enum Direction {\n    case north, south, east, west\n\n    func opposite() -> Direction {\n        switch self {\n        case .north: return .south\n        case .south: return .north\n        case .east: return .west\n        case .west: return .east\n        }\n    }\n}",
      "end_line": 13,
      "language": "swift",
      "name": "Direction",
      "original_indentation": 0,
      "start_line": 2
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    func opposite() -> Direction {\n        switch self {\n        case .north: return .south\n        case .south: return .north\n        case .east: return .west\n        case .west: return .east\n        }\n    }",
      "end_line": 12,
      "language": "swift",
      "name": "opposite",
      "original_indentation": 4,
      "start_line": 5
    },
    {
      "chunk_type": "Conditional",
      "comment_ranges": [],
      "content": "        switch self {\n        case .north: return .south\n        case .south: return .north\n        case .east: return .west\n        case .west: return .east\n        }",
      "end_line": 11,
      "language": "swift",
      "name": "switch_block",
      "original_indentation": 8,
      "start_line": 6
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "        switch self {\n        case .north: return .south\n        case .south: return .north\n        case .east: return .west\n        case .west: return .east\n        }\n    ",
      "end_line": 12,
      "language": "swift",
      "name": "code_block",
      "original_indentation": 8,
      "start_line": 6
    },
    {
      "chunk_type": "Class",
      "comment_ranges": [],
      "content": "enum Status {\n    case pending\n    case completed\n    case failed\n}",
      "end_line": 19,
      "language": "swift",
      "name": "Status",
      "original_indentation": 0,
      "start_line": 15
    }
  ],
  "source_code": "\nenum Direction {\n    case north, south, east, west\n\n    func opposite() -> Direction {\n        switch self {\n        case .north: return .south\n        case .south: return .north\n        case .east: return .west\n        case .west: return .east\n        }\n    }\n}\n\nenum Status {\n    case pending\n    case completed\n    case failed\n}\n",
  "test_name": "test_swift_enum_extraction",
  "total_chunks": 6
}
