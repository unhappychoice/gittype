---
source: tests/integration/languages/extractor.rs
expression: "serde_json::to_string_pretty(&snapshot_data).unwrap()"
---
{
  "chunks": [
    {
      "chunk_type": "File",
      "comment_ranges": [
        [
          72,
          94
        ],
        [
          143,
          171
        ],
        [
          248,
          267
        ],
        [
          457,
          470
        ],
        [
          523,
          545
        ]
      ],
      "content": "\nclass Resource {\nprivate:\n    int* data;\n    size_t size;\n\npublic:\n    // Default constructor\n    Resource() : data(nullptr), size(0) {}\n\n    // Parameterized constructor\n    Resource(size_t s) : size(s) {\n        data = new int[size];\n    }\n\n    // Copy constructor\n    Resource(const Resource& other) : size(other.size) {\n        data = new int[size];\n        for (size_t i = 0; i < size; ++i) {\n            data[i] = other.data[i];\n        }\n    }\n\n    // Destructor\n    ~Resource() {\n        delete[] data;\n    }\n\n    // Assignment operator\n    Resource& operator=(const Resource& other) {\n        if (this != &other) {\n            delete[] data;\n            size = other.size;\n            data = new int[size];\n            for (size_t i = 0; i < size; ++i) {\n                data[i] = other.data[i];\n            }\n        }\n        return *this;\n    }\n\n    int& operator[](size_t index) {\n        return data[index];\n    }\n};\n\nint main() {\n    Resource r1(10);\n    Resource r2 = r1;\n    Resource r3;\n    r3 = r2;\n    return 0;\n}\n",
      "end_line": 53,
      "language": "cpp",
      "name": "entire_file",
      "original_indentation": 0,
      "start_line": 1
    },
    {
      "chunk_type": "Struct",
      "comment_ranges": [
        [
          71,
          93
        ],
        [
          142,
          170
        ],
        [
          247,
          266
        ],
        [
          456,
          469
        ],
        [
          522,
          544
        ]
      ],
      "content": "class Resource {\nprivate:\n    int* data;\n    size_t size;\n\npublic:\n    // Default constructor\n    Resource() : data(nullptr), size(0) {}\n\n    // Parameterized constructor\n    Resource(size_t s) : size(s) {\n        data = new int[size];\n    }\n\n    // Copy constructor\n    Resource(const Resource& other) : size(other.size) {\n        data = new int[size];\n        for (size_t i = 0; i < size; ++i) {\n            data[i] = other.data[i];\n        }\n    }\n\n    // Destructor\n    ~Resource() {\n        delete[] data;\n    }\n\n    // Assignment operator\n    Resource& operator=(const Resource& other) {\n        if (this != &other) {\n            delete[] data;\n            size = other.size;\n            data = new int[size];\n            for (size_t i = 0; i < size; ++i) {\n                data[i] = other.data[i];\n            }\n        }\n        return *this;\n    }\n\n    int& operator[](size_t index) {\n        return data[index];\n    }\n}",
      "end_line": 45,
      "language": "cpp",
      "name": "Resource",
      "original_indentation": 0,
      "start_line": 2
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    Resource() : data(nullptr), size(0) {}",
      "end_line": 9,
      "language": "cpp",
      "name": "Resource",
      "original_indentation": 4,
      "start_line": 9
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    Resource(size_t s) : size(s) {\n        data = new int[size];\n    }",
      "end_line": 14,
      "language": "cpp",
      "name": "Resource",
      "original_indentation": 4,
      "start_line": 12
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    Resource(const Resource& other) : size(other.size) {\n        data = new int[size];\n        for (size_t i = 0; i < size; ++i) {\n            data[i] = other.data[i];\n        }\n    }",
      "end_line": 22,
      "language": "cpp",
      "name": "Resource",
      "original_indentation": 4,
      "start_line": 17
    },
    {
      "chunk_type": "Variable",
      "comment_ranges": [],
      "content": "        for (size_t i = 0;",
      "end_line": 19,
      "language": "cpp",
      "name": "i",
      "original_indentation": 13,
      "start_line": 19
    },
    {
      "chunk_type": "Loop",
      "comment_ranges": [],
      "content": "        for (size_t i = 0; i < size; ++i) {\n            data[i] = other.data[i];\n        }",
      "end_line": 21,
      "language": "cpp",
      "name": "for_loop",
      "original_indentation": 8,
      "start_line": 19
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    ~Resource() {\n        delete[] data;\n    }",
      "end_line": 27,
      "language": "cpp",
      "name": "code_block",
      "original_indentation": 16,
      "start_line": 25
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    Resource& operator=(const Resource& other) {\n        if (this != &other) {\n            delete[] data;\n            size = other.size;\n            data = new int[size];\n            for (size_t i = 0; i < size; ++i) {\n                data[i] = other.data[i];\n            }\n        }\n        return *this;\n    }",
      "end_line": 40,
      "language": "cpp",
      "name": "code_block",
      "original_indentation": 47,
      "start_line": 30
    },
    {
      "chunk_type": "Conditional",
      "comment_ranges": [],
      "content": "        if (this != &other) {\n            delete[] data;\n            size = other.size;\n            data = new int[size];\n            for (size_t i = 0; i < size; ++i) {\n                data[i] = other.data[i];\n            }\n        }",
      "end_line": 38,
      "language": "cpp",
      "name": "if_block",
      "original_indentation": 8,
      "start_line": 31
    },
    {
      "chunk_type": "Variable",
      "comment_ranges": [],
      "content": "            for (size_t i = 0;",
      "end_line": 35,
      "language": "cpp",
      "name": "i",
      "original_indentation": 17,
      "start_line": 35
    },
    {
      "chunk_type": "Loop",
      "comment_ranges": [],
      "content": "            for (size_t i = 0; i < size; ++i) {\n                data[i] = other.data[i];\n            }",
      "end_line": 37,
      "language": "cpp",
      "name": "for_loop",
      "original_indentation": 12,
      "start_line": 35
    },
    {
      "chunk_type": "CodeBlock",
      "comment_ranges": [],
      "content": "    int& operator[](size_t index) {\n        return data[index];\n    }",
      "end_line": 44,
      "language": "cpp",
      "name": "code_block",
      "original_indentation": 34,
      "start_line": 42
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "int main() {\n    Resource r1(10);\n    Resource r2 = r1;\n    Resource r3;\n    r3 = r2;\n    return 0;\n}",
      "end_line": 53,
      "language": "cpp",
      "name": "main",
      "original_indentation": 0,
      "start_line": 47
    },
    {
      "chunk_type": "Variable",
      "comment_ranges": [],
      "content": "    Resource r1(10);",
      "end_line": 48,
      "language": "cpp",
      "name": "r1",
      "original_indentation": 4,
      "start_line": 48
    },
    {
      "chunk_type": "Variable",
      "comment_ranges": [],
      "content": "    Resource r2 = r1;",
      "end_line": 49,
      "language": "cpp",
      "name": "r2",
      "original_indentation": 4,
      "start_line": 49
    }
  ],
  "source_code": "\nclass Resource {\nprivate:\n    int* data;\n    size_t size;\n\npublic:\n    // Default constructor\n    Resource() : data(nullptr), size(0) {}\n\n    // Parameterized constructor\n    Resource(size_t s) : size(s) {\n        data = new int[size];\n    }\n\n    // Copy constructor\n    Resource(const Resource& other) : size(other.size) {\n        data = new int[size];\n        for (size_t i = 0; i < size; ++i) {\n            data[i] = other.data[i];\n        }\n    }\n\n    // Destructor\n    ~Resource() {\n        delete[] data;\n    }\n\n    // Assignment operator\n    Resource& operator=(const Resource& other) {\n        if (this != &other) {\n            delete[] data;\n            size = other.size;\n            data = new int[size];\n            for (size_t i = 0; i < size; ++i) {\n                data[i] = other.data[i];\n            }\n        }\n        return *this;\n    }\n\n    int& operator[](size_t index) {\n        return data[index];\n    }\n};\n\nint main() {\n    Resource r1(10);\n    Resource r2 = r1;\n    Resource r3;\n    r3 = r2;\n    return 0;\n}\n",
  "test_name": "test_cpp_constructor_destructor_extraction",
  "total_chunks": 16
}
