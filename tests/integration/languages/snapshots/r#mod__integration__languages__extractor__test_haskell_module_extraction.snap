---
source: tests/integration/languages/extractor.rs
expression: "serde_json::to_string_pretty(&snapshot_data).unwrap()"
---
{
  "chunks": [
    {
      "chunk_type": "File",
      "comment_ranges": [],
      "content": "\nmodule Math.Utils (\n  add,\n  multiply,\n  square\n) where\n\nadd :: Num a => a -> a -> a\nadd x y = x + y\n\nmultiply :: Num a => a -> a -> a\nmultiply x y = x * y\n\nsquare :: Num a => a -> a\nsquare x = x * x\n",
      "end_line": 15,
      "language": "haskell",
      "name": "entire_file",
      "original_indentation": 0,
      "start_line": 1
    },
    {
      "chunk_type": "Module",
      "comment_ranges": [],
      "content": "module Math.Utils",
      "end_line": 2,
      "language": "haskell",
      "name": "unknown",
      "original_indentation": 7,
      "start_line": 2
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "add :: Num a => a -> a -> a",
      "end_line": 8,
      "language": "haskell",
      "name": "add",
      "original_indentation": 0,
      "start_line": 8
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "add x y = x + y",
      "end_line": 9,
      "language": "haskell",
      "name": "add",
      "original_indentation": 0,
      "start_line": 9
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "multiply :: Num a => a -> a -> a",
      "end_line": 11,
      "language": "haskell",
      "name": "multiply",
      "original_indentation": 0,
      "start_line": 11
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "multiply x y = x * y",
      "end_line": 12,
      "language": "haskell",
      "name": "multiply",
      "original_indentation": 0,
      "start_line": 12
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "square :: Num a => a -> a",
      "end_line": 14,
      "language": "haskell",
      "name": "square",
      "original_indentation": 0,
      "start_line": 14
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "square x = x * x",
      "end_line": 15,
      "language": "haskell",
      "name": "square",
      "original_indentation": 0,
      "start_line": 15
    }
  ],
  "source_code": "\nmodule Math.Utils (\n  add,\n  multiply,\n  square\n) where\n\nadd :: Num a => a -> a -> a\nadd x y = x + y\n\nmultiply :: Num a => a -> a -> a\nmultiply x y = x * y\n\nsquare :: Num a => a -> a\nsquare x = x * x\n",
  "test_name": "test_haskell_module_extraction",
  "total_chunks": 8
}
