---
source: tests/integration/languages/extractor.rs
expression: "serde_json::to_string_pretty(&snapshot_data).unwrap()"
---
{
  "chunks": [
    {
      "chunk_type": "File",
      "comment_ranges": [],
      "content": "\nstruct Point3D {\n    double x, y, z;\n\n    Point3D() : x(0), y(0), z(0) {}\n    Point3D(double x, double y, double z) : x(x), y(y), z(z) {}\n\n    double distance_from_origin() const {\n        return sqrt(x*x + y*y + z*z);\n    }\n};\n\nstruct Color {\n    uint8_t r, g, b, a;\n\n    Color(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha = 255)\n        : r(red), g(green), b(blue), a(alpha) {}\n};\n\nint main() {\n    Point3D origin;\n    Point3D point(1.0, 2.0, 3.0);\n    Color red(255, 0, 0);\n\n    double distance = point.distance_from_origin();\n    return 0;\n}\n",
      "end_line": 27,
      "language": "cpp",
      "name": "entire_file",
      "original_indentation": 0,
      "start_line": 1
    },
    {
      "chunk_type": "Struct",
      "comment_ranges": [],
      "content": "struct Point3D {\n    double x, y, z;\n\n    Point3D() : x(0), y(0), z(0) {}\n    Point3D(double x, double y, double z) : x(x), y(y), z(z) {}\n\n    double distance_from_origin() const {\n        return sqrt(x*x + y*y + z*z);\n    }\n}",
      "end_line": 11,
      "language": "cpp",
      "name": "Point3D",
      "original_indentation": 0,
      "start_line": 2
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    Point3D() : x(0), y(0), z(0) {}",
      "end_line": 5,
      "language": "cpp",
      "name": "Point3D",
      "original_indentation": 4,
      "start_line": 5
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    Point3D(double x, double y, double z) : x(x), y(y), z(z) {}",
      "end_line": 6,
      "language": "cpp",
      "name": "Point3D",
      "original_indentation": 4,
      "start_line": 6
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    double distance_from_origin() const {\n        return sqrt(x*x + y*y + z*z);\n    }",
      "end_line": 10,
      "language": "cpp",
      "name": "distance_from_origin",
      "original_indentation": 4,
      "start_line": 8
    },
    {
      "chunk_type": "Struct",
      "comment_ranges": [],
      "content": "struct Color {\n    uint8_t r, g, b, a;\n\n    Color(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha = 255)\n        : r(red), g(green), b(blue), a(alpha) {}\n}",
      "end_line": 18,
      "language": "cpp",
      "name": "Color",
      "original_indentation": 0,
      "start_line": 13
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "    Color(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha = 255)\n        : r(red), g(green), b(blue), a(alpha) {}",
      "end_line": 17,
      "language": "cpp",
      "name": "Color",
      "original_indentation": 4,
      "start_line": 16
    },
    {
      "chunk_type": "Function",
      "comment_ranges": [],
      "content": "int main() {\n    Point3D origin;\n    Point3D point(1.0, 2.0, 3.0);\n    Color red(255, 0, 0);\n\n    double distance = point.distance_from_origin();\n    return 0;\n}",
      "end_line": 27,
      "language": "cpp",
      "name": "main",
      "original_indentation": 0,
      "start_line": 20
    },
    {
      "chunk_type": "Variable",
      "comment_ranges": [],
      "content": "    Point3D point(1.0, 2.0, 3.0);",
      "end_line": 22,
      "language": "cpp",
      "name": "point",
      "original_indentation": 4,
      "start_line": 22
    },
    {
      "chunk_type": "Variable",
      "comment_ranges": [],
      "content": "    Color red(255, 0, 0);",
      "end_line": 23,
      "language": "cpp",
      "name": "red",
      "original_indentation": 4,
      "start_line": 23
    },
    {
      "chunk_type": "Variable",
      "comment_ranges": [],
      "content": "    double distance = point.distance_from_origin();",
      "end_line": 25,
      "language": "cpp",
      "name": "distance",
      "original_indentation": 4,
      "start_line": 25
    }
  ],
  "source_code": "\nstruct Point3D {\n    double x, y, z;\n\n    Point3D() : x(0), y(0), z(0) {}\n    Point3D(double x, double y, double z) : x(x), y(y), z(z) {}\n\n    double distance_from_origin() const {\n        return sqrt(x*x + y*y + z*z);\n    }\n};\n\nstruct Color {\n    uint8_t r, g, b, a;\n\n    Color(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha = 255)\n        : r(red), g(green), b(blue), a(alpha) {}\n};\n\nint main() {\n    Point3D origin;\n    Point3D point(1.0, 2.0, 3.0);\n    Color red(255, 0, 0);\n\n    double distance = point.distance_from_origin();\n    return 0;\n}\n",
  "test_name": "test_cpp_struct_extraction",
  "total_chunks": 11
}
