/// ASCII art rank patterns using oh-my-logo style with colored ANSI codes
/// Auto-generated from oh-my-logo with different palettes for different rank categories
use std::collections::HashMap;

pub fn get_all_rank_patterns() -> HashMap<String, Vec<String>> {
    let mut patterns = HashMap::new();

    // API Crafter
    patterns.insert(
        "API Crafter".to_string(),
        vec![
            "     _    ____ ___    ____            __ _            ".to_string(),
            "    / \\  |  _ \\_ _|  / ___|_ __ __ _ / _| |_ ___ _ __ ".to_string(),
            "   / _ \\ | |_) | |  | |   | '__/ _` | |_| __/ _ \\ '__|".to_string(),
            "  / ___ \\|  __/| |  | |___| | | (_| |  _| ||  __/ |   ".to_string(),
            " /_/   \\_\\_|  |___|  \\____|_|  \\__,_|_|  \\__\\___|_|   ".to_string(),
            "                                                      ".to_string(),
        ],
    );

    // Architect
    patterns.insert(
        "Architect".to_string(),
        vec![
            "     _             _     _ _            _   ".to_string(),
            "    / \\   _ __ ___| |__ (_) |_ ___  ___| |_ ".to_string(),
            "   / _ \\ | '__/ __| '_ \\| | __/ _ \\/ __| __|".to_string(),
            "  / ___ \\| | | (__| | | | | ||  __/ (__| |_ ".to_string(),
            " /_/   \\_\\_|  \\___|_| |_|_|\\__\\___|\\___|\\__|".to_string(),
            "                                            ".to_string(),
        ],
    );

    // Backend Dev
    patterns.insert(
        "Backend Dev".to_string(),
        vec![
            "  ____             _                  _   ____             ".to_string(),
            " | __ )  __ _  ___| | _____ _ __   __| | |  _ \\  _____   __".to_string(),
            " |  _ \\ / _` |/ __| |/ / _ \\ '_ \\ / _` | | | | |/ _ \\ \\ / /".to_string(),
            " | |_) | (_| | (__|   <  __/ | | | (_| | | |_| |  __/\\ V / ".to_string(),
            " |____/ \\__,_|\\___|_|\\_\\___|_| |_|\\__,_| |____/ \\___| \\_/  ".to_string(),
            "                                                           ".to_string(),
        ],
    );

    // Bash Newbie
    patterns.insert(
        "Bash Newbie".to_string(),
        vec![
            "  ____            _       _   _               _     _      ".to_string(),
            " | __ )  __ _ ___| |__   | \\ | | _____      _| |__ (_) ___ ".to_string(),
            " |  _ \\ / _` / __| '_ \\  |  \\| |/ _ \\ \\ /\\ / / '_ \\| |/ _ \\".to_string(),
            " | |_) | (_| \\__ \\ | | | | |\\  |  __/\\ V  V /| |_) | |  __/".to_string(),
            " |____/ \\__,_|___/_| |_| |_| \\_|\\___| \\_/\\_/ |_.__/|_|\\___|".to_string(),
            "                                                           ".to_string(),
        ],
    );

    // Blue Screen
    patterns.insert(
        "Blue Screen".to_string(),
        vec![
            "  ____  _              ____                           ".to_string(),
            " | __ )| |_   _  ___  / ___|  ___ _ __ ___  ___ _ __  ".to_string(),
            " |  _ \\| | | | |/ _ \\ \\___ \\ / __| '__/ _ \\/ _ \\ '_ \\ ".to_string(),
            " | |_) | | |_| |  __/  ___) | (__| | |  __/  __/ | | |".to_string(),
            " |____/|_|\\__,_|\\___| |____/ \\___|_|  \\___|\\___|_| |_|".to_string(),
            "                                                      ".to_string(),
        ],
    );

    // Bracket Juggler
    patterns.insert(
        "Bracket Juggler".to_string(),
        vec![
            "  ____                 _        _         _                   _           "
                .to_string(),
            " | __ ) _ __ __ _  ___| | _____| |_      | |_   _  __ _  __ _| | ___ _ __ "
                .to_string(),
            " |  _ \\| '__/ _` |/ __| |/ / _ \\ __|  _  | | | | |/ _` |/ _` | |/ _ \\ '__|"
                .to_string(),
            " | |_) | | | (_| | (__|   <  __/ |_  | |_| | |_| | (_| | (_| | |  __/ |   "
                .to_string(),
            " |____/|_|  \\__,_|\\___|_|\\_\\___|\\__|  \\___/ \\__,_|\\__, |\\__, |_|\\___|_|   "
                .to_string(),
            "                                                  |___/ |___/             "
                .to_string(),
        ],
    );

    // Buffer Overflow
    patterns.insert(
        "Buffer Overflow".to_string(),
        vec![
            "  ____         __  __              ___                  __ _               "
                .to_string(),
            " | __ ) _   _ / _|/ _| ___ _ __   / _ \\__   _____ _ __ / _| | _____      __"
                .to_string(),
            " |  _ \\| | | | |_| |_ / _ \\ '__| | | | \\ \\ / / _ \\ '__| |_| |/ _ \\ \\ /\\ / /"
                .to_string(),
            " | |_) | |_| |  _|  _|  __/ |    | |_| |\\ V /  __/ |  |  _| | (_) \\ V  V / "
                .to_string(),
            " |____/ \\__,_|_| |_|  \\___|_|     \\___/  \\_/ \\___|_|  |_| |_|\\___/ \\_/\\_/  "
                .to_string(),
            "                                                                           "
                .to_string(),
        ],
    );

    // Build Tamer
    patterns.insert(
        "Build Tamer".to_string(),
        vec![
            "  ____        _ _     _   _____                         ".to_string(),
            " | __ ) _   _(_) | __| | |_   _|_ _ _ __ ___   ___ _ __ ".to_string(),
            " |  _ \\| | | | | |/ _` |   | |/ _` | '_ ` _ \\ / _ \\ '__|".to_string(),
            " | |_) | |_| | | | (_| |   | | (_| | | | | | |  __/ |   ".to_string(),
            " |____/ \\__,_|_|_|\\__,_|   |_|\\__,_|_| |_| |_|\\___|_|   ".to_string(),
            "                                                        ".to_string(),
        ],
    );

    // Bytecode Interpreter
    patterns.insert(
        "Bytecode Interpreter".to_string(),
        vec![
            "  ____        _                     _                ".to_string(),
            " | __ ) _   _| |_ ___  ___ ___   __| | ___           ".to_string(),
            " |  _ \\| | | | __/ _ \\/ __/ _ \\ / _` |/ _ \\          ".to_string(),
            " | |_) | |_| | ||  __/ (_| (_) | (_| |  __/          ".to_string(),
            " |____/ \\__, |\\__\\___|\\___\\___/ \\__,_|\\___|          ".to_string(),
            "  ___   |___/                           _            ".to_string(),
            " |_ _|_ __ | |_ ___ _ __ _ __  _ __ ___| |_ ___ _ __ ".to_string(),
            "  | || '_ \\| __/ _ \\ '__| '_ \\| '__/ _ \\ __/ _ \\ '__|".to_string(),
            "  | || | | | ||  __/ |  | |_) | | |  __/ ||  __/ |   ".to_string(),
            " |___|_| |_|\\__\\___|_|  | .__/|_|  \\___|\\__\\___|_|   ".to_string(),
            "                        |_|                          ".to_string(),
        ],
    );

    // CDN Sentinel
    patterns.insert(
        "CDN Sentinel".to_string(),
        vec![
            "   ____ ____  _   _   ____             _   _            _ ".to_string(),
            "  / ___|  _ \\| \\ | | / ___|  ___ _ __ | |_(_)_ __   ___| |".to_string(),
            " | |   | | | |  \\| | \\___ \\ / _ \\ '_ \\| __| | '_ \\ / _ \\ |".to_string(),
            " | |___| |_| | |\\  |  ___) |  __/ | | | |_| | | | |  __/ |".to_string(),
            "  \\____|____/|_| \\_| |____/ \\___|_| |_|\\__|_|_| |_|\\___|_|".to_string(),
            "                                                          ".to_string(),
        ],
    );

    // CI Tinkerer
    patterns.insert(
        "CI Tinkerer".to_string(),
        vec![
            "   ____ ___   _____ _       _                      ".to_string(),
            "  / ___|_ _| |_   _(_)_ __ | | _____ _ __ ___ _ __ ".to_string(),
            " | |    | |    | | | | '_ \\| |/ / _ \\ '__/ _ \\ '__|".to_string(),
            " | |___ | |    | | | | | | |   <  __/ | |  __/ |   ".to_string(),
            "  \\____|___|   |_| |_|_| |_|_|\\_\\___|_|  \\___|_|   ".to_string(),
            "                                                   ".to_string(),
        ],
    );

    // CLI Wanderer
    patterns.insert(
        "CLI Wanderer".to_string(),
        vec![
            "   ____ _     ___  __        __              _                    ".to_string(),
            "  / ___| |   |_ _| \\ \\      / /_ _ _ __   __| | ___ _ __ ___ _ __ ".to_string(),
            " | |   | |    | |   \\ \\ /\\ / / _` | '_ \\ / _` |/ _ \\ '__/ _ \\ '__|".to_string(),
            " | |___| |___ | |    \\ V  V / (_| | | | | (_| |  __/ | |  __/ |   ".to_string(),
            "  \\____|_____|___|    \\_/\\_/ \\__,_|_| |_|\\__,_|\\___|_|  \\___|_|   ".to_string(),
            "                                                                  ".to_string(),
        ],
    );

    // Cloud Platform
    patterns.insert(
        "Cloud Platform".to_string(),
        vec![
            "   ____ _                 _   ____  _       _    __                      ".to_string(),
            "  / ___| | ___  _   _  __| | |  _ \\| | __ _| |_ / _| ___  _ __ _ __ ___  "
                .to_string(),
            " | |   | |/ _ \\| | | |/ _` | | |_) | |/ _` | __| |_ / _ \\| '__| '_ ` _ \\ "
                .to_string(),
            " | |___| | (_) | |_| | (_| | |  __/| | (_| | |_|  _| (_) | |  | | | | | |".to_string(),
            "  \\____|_|\\___/ \\__,_|\\__,_| |_|   |_|\\__,_|\\__|_|  \\___/|_|  |_| |_| |_|"
                .to_string(),
            "                                                                         ".to_string(),
        ],
    );

    // Code Monkey
    patterns.insert(
        "Code Monkey".to_string(),
        vec![
            "   ____          _        __  __             _              ".to_string(),
            "  / ___|___   __| | ___  |  \\/  | ___  _ __ | | _____ _   _ ".to_string(),
            " | |   / _ \\ / _` |/ _ \\ | |\\/| |/ _ \\| '_ \\| |/ / _ \\ | | |".to_string(),
            " | |__| (_) | (_| |  __/ | |  | | (_) | | | |   <  __/ |_| |".to_string(),
            "  \\____\\___/ \\__,_|\\___| |_|  |_|\\___/|_| |_|_|\\_\\___|\\__, |".to_string(),
            "                                                      |___/ ".to_string(),
        ],
    );

    // Code Reviewer
    patterns.insert(
        "Code Reviewer".to_string(),
        vec![
            "   ____          _        ____            _                        ".to_string(),
            "  / ___|___   __| | ___  |  _ \\ _____   _(_) _____      _____ _ __ ".to_string(),
            " | |   / _ \\ / _` |/ _ \\ | |_) / _ \\ \\ / / |/ _ \\ \\ /\\ / / _ \\ '__|"
                .to_string(),
            " | |__| (_) | (_| |  __/ |  _ <  __/\\ V /| |  __/\\ V  V /  __/ |   ".to_string(),
            "  \\____\\___/ \\__,_|\\___| |_| \\_\\___| \\_/ |_|\\___| \\_/\\_/ \\___|_|   "
                .to_string(),
            "                                                                   ".to_string(),
        ],
    );

    // Compiler
    patterns.insert(
        "Compiler".to_string(),
        vec![
            "   ____                      _ _           ".to_string(),
            "  / ___|___  _ __ ___  _ __ (_) | ___ _ __ ".to_string(),
            " | |   / _ \\| '_ ` _ \\| '_ \\| | |/ _ \\ '__|".to_string(),
            " | |__| (_) | | | | | | |_) | | |  __/ |   ".to_string(),
            "  \\____\\___/|_| |_| |_| .__/|_|_|\\___|_|   ".to_string(),
            "                      |_|                  ".to_string(),
        ],
    );

    // Container Orchestrator
    patterns.insert(
        "Container Orchestrator".to_string(),
        vec![
            "   ____            _        _                                ".to_string(),
            "  / ___|___  _ __ | |_ __ _(_)_ __   ___ _ __                ".to_string(),
            " | |   / _ \\| '_ \\| __/ _` | | '_ \\ / _ \\ '__|               ".to_string(),
            " | |__| (_) | | | | || (_| | | | | |  __/ |                  ".to_string(),
            "  \\____\\___/|_| |_|\\__\\__,_|_|_| |_|\\___|_|    _             ".to_string(),
            "  / _ \\ _ __ ___| |__   ___  ___| |_ _ __ __ _| |_ ___  _ __ ".to_string(),
            " | | | | '__/ __| '_ \\ / _ \\/ __| __| '__/ _` | __/ _ \\| '__|".to_string(),
            " | |_| | | | (__| | | |  __/\\__ \\ |_| | | (_| | || (_) | |   ".to_string(),
            "  \\___/|_|  \\___|_| |_|\\___||___/\\__|_|  \\__,_|\\__\\___/|_|   ".to_string(),
            "                                                             ".to_string(),
        ],
    );

    // Copy-Paste Engineer
    patterns.insert(
        "Copy-Paste Engineer".to_string(),
        vec![
            "   ____                        ____           _       ".to_string(),
            "  / ___|___  _ __  _   _      |  _ \\ __ _ ___| |_ ___ ".to_string(),
            " | |   / _ \\| '_ \\| | | |_____| |_) / _` / __| __/ _ \\".to_string(),
            " | |__| (_) | |_) | |_| |_____|  __/ (_| \\__ \\ ||  __/".to_string(),
            "  \\____\\___/| .__/ \\__, |     |_|   \\__,_|___/\\__\\___|".to_string(),
            "  _____     |_|    |___/                              ".to_string(),
            " | ____|_ __   __ _(_)_ __   ___  ___ _ __            ".to_string(),
            " |  _| | '_ \\ / _` | | '_ \\ / _ \\/ _ \\ '__|           ".to_string(),
            " | |___| | | | (_| | | | | |  __/  __/ |              ".to_string(),
            " |_____|_| |_|\\__, |_|_| |_|\\___|\\___|_|              ".to_string(),
            "              |___/                                   ".to_string(),
        ],
    );

    // DNS Overlord
    patterns.insert(
        "DNS Overlord".to_string(),
        vec![
            "  ____  _   _ ____     ___                 _               _ ".to_string(),
            " |  _ \\| \\ | / ___|   / _ \\__   _____ _ __| | ___  _ __ __| |".to_string(),
            " | | | |  \\| \\___ \\  | | | \\ \\ / / _ \\ '__| |/ _ \\| '__/ _` |".to_string(),
            " | |_| | |\\  |___) | | |_| |\\ V /  __/ |  | | (_) | | | (_| |".to_string(),
            " |____/|_| \\_|____/   \\___/  \\_/ \\___|_|  |_|\\___/|_|  \\__,_|".to_string(),
            "                                                             ".to_string(),
        ],
    );

    // Data Pipeline Master
    patterns.insert(
        "Data Pipeline Master".to_string(),
        vec![
            "  ____        _          ____  _            _ _            ".to_string(),
            " |  _ \\  __ _| |_ __ _  |  _ \\(_)_ __   ___| (_)_ __   ___ ".to_string(),
            " | | | |/ _` | __/ _` | | |_) | | '_ \\ / _ \\ | | '_ \\ / _ \\".to_string(),
            " | |_| | (_| | || (_| | |  __/| | |_) |  __/ | | | | |  __/".to_string(),
            " |____/_\\__,_|\\__\\__,_| |_|   |_| .__/ \\___|_|_|_| |_|\\___|".to_string(),
            " |  \\/  | __ _ ___| |_ ___ _ __ |_|                        ".to_string(),
            " | |\\/| |/ _` / __| __/ _ \\ '__|                           ".to_string(),
            " | |  | | (_| \\__ \\ ||  __/ |                              ".to_string(),
            " |_|  |_|\\__,_|___/\\__\\___|_|                              ".to_string(),
            "                                                           ".to_string(),
        ],
    );

    // Database Engine
    patterns.insert(
        "Database Engine".to_string(),
        vec![
            "  ____        _        _                      _____             _            "
                .to_string(),
            " |  _ \\  __ _| |_ __ _| |__   __ _ ___  ___  | ____|_ __   __ _(_)_ __   ___ "
                .to_string(),
            " | | | |/ _` | __/ _` | '_ \\ / _` / __|/ _ \\ |  _| | '_ \\ / _` | | '_ \\ / _ \\"
                .to_string(),
            " | |_| | (_| | || (_| | |_) | (_| \\__ \\  __/ | |___| | | | (_| | | | | |  __/"
                .to_string(),
            " |____/ \\__,_|\\__\\__,_|_.__/ \\__,_|___/\\___| |_____|_| |_|\\__, |_|_| |_|\\___|"
                .to_string(),
            "                                                          |___/              "
                .to_string(),
        ],
    );

    // DevOps Engineer
    patterns.insert(
        "DevOps Engineer".to_string(),
        vec![
            "  ____              ___              _____             _                      "
                .to_string(),
            " |  _ \\  _____   __/ _ \\ _ __  ___  | ____|_ __   __ _(_)_ __   ___  ___ _ __ "
                .to_string(),
            " | | | |/ _ \\ \\ / / | | | '_ \\/ __| |  _| | '_ \\ / _` | | '_ \\ / _ \\/ _ \\ '__|"
                .to_string(),
            " | |_| |  __/\\ V /| |_| | |_) \\__ \\ | |___| | | | (_| | | | | |  __/  __/ |   "
                .to_string(),
            " |____/ \\___| \\_/  \\___/| .__/|___/ |_____|_| |_|\\__, |_|_| |_|\\___|\\___|_|   "
                .to_string(),
            "                        |_|                      |___/                        "
                .to_string(),
        ],
    );

    // Filesystem
    patterns.insert(
        "Filesystem".to_string(),
        vec![
            "  _____ _ _                     _                 ".to_string(),
            " |  ___(_) | ___  ___ _   _ ___| |_ ___ _ __ ___  ".to_string(),
            " | |_  | | |/ _ \\/ __| | | / __| __/ _ \\ '_ ` _ \\ ".to_string(),
            " |  _| | | |  __/\\__ \\ |_| \\__ \\ ||  __/ | | | | |".to_string(),
            " |_|   |_|_|\\___||___/\\__, |___/\\__\\___|_| |_| |_|".to_string(),
            "                      |___/                       ".to_string(),
        ],
    );

    // Frontend Dev
    patterns.insert(
        "Frontend Dev".to_string(),
        vec![
            "  _____                _                 _   ____             ".to_string(),
            " |  ___| __ ___  _ __ | |_ ___ _ __   __| | |  _ \\  _____   __".to_string(),
            " | |_ | '__/ _ \\| '_ \\| __/ _ \\ '_ \\ / _` | | | | |/ _ \\ \\ / /".to_string(),
            " |  _|| | | (_) | | | | ||  __/ | | | (_| | | |_| |  __/\\ V / ".to_string(),
            " |_|  |_|  \\___/|_| |_|\\__\\___|_| |_|\\__,_| |____/ \\___| \\_/  ".to_string(),
            "                                                              ".to_string(),
        ],
    );

    // GPU Cluster
    patterns.insert(
        "GPU Cluster".to_string(),
        vec![
            "   ____ ____  _   _    ____ _           _            ".to_string(),
            "  / ___|  _ \\| | | |  / ___| |_   _ ___| |_ ___ _ __ ".to_string(),
            " | |  _| |_) | | | | | |   | | | | / __| __/ _ \\ '__|".to_string(),
            " | |_| |  __/| |_| | | |___| | |_| \\__ \\ ||  __/ |   ".to_string(),
            "  \\____|_|    \\___/   \\____|_|\\__,_|___/\\__\\___|_|   ".to_string(),
            "                                                     ".to_string(),
        ],
    );

    // Git Ninja
    patterns.insert(
        "Git Ninja".to_string(),
        vec![
            "   ____ _ _     _   _ _        _       ".to_string(),
            "  / ___(_) |_  | \\ | (_)_ __  (_) __ _ ".to_string(),
            " | |  _| | __| |  \\| | | '_ \\ | |/ _` |".to_string(),
            " | |_| | | |_  | |\\  | | | | || | (_| |".to_string(),
            "  \\____|_|\\__| |_| \\_|_|_| |_|/ |\\__,_|".to_string(),
            "                            |__/       ".to_string(),
        ],
    );

    // Heisenbug
    patterns.insert(
        "Heisenbug".to_string(),
        vec![
            "  _   _      _                _                 ".to_string(),
            " | | | | ___(_)___  ___ _ __ | |__  _   _  __ _ ".to_string(),
            " | |_| |/ _ \\ / __|/ _ \\ '_ \\| '_ \\| | | |/ _` |".to_string(),
            " |  _  |  __/ \\__ \\  __/ | | | |_) | |_| | (_| |".to_string(),
            " |_| |_|\\___|_|___/\\___|_| |_|_.__/ \\__,_|\\__, |".to_string(),
            "                                          |___/ ".to_string(),
        ],
    );

    // Hello World
    patterns.insert(
        "Hello World".to_string(),
        vec![
            "  _   _      _ _        __        __         _     _ ".to_string(),
            " | | | | ___| | | ___   \\ \\      / /__  _ __| | __| |".to_string(),
            " | |_| |/ _ \\ | |/ _ \\   \\ \\ /\\ / / _ \\| '__| |/ _` |".to_string(),
            " |  _  |  __/ | | (_) |   \\ V  V / (_) | |  | | (_| |".to_string(),
            " |_| |_|\\___|_|_|\\___/     \\_/\\_/ \\___/|_|  |_|\\__,_|".to_string(),
            "                                                     ".to_string(),
        ],
    );

    // Incident Responder
    patterns.insert(
        "Incident Responder".to_string(),
        vec![
            "  ___            _     _            _              ".to_string(),
            " |_ _|_ __   ___(_) __| | ___ _ __ | |_            ".to_string(),
            "  | || '_ \\ / __| |/ _` |/ _ \\ '_ \\| __|           ".to_string(),
            "  | || | | | (__| | (_| |  __/ | | | |_            ".to_string(),
            " |___|_| |_|\\___|_|\\__,_|\\___|_| |_|\\__|           ".to_string(),
            " |  _ \\ ___  ___ _ __   ___  _ __   __| | ___ _ __ ".to_string(),
            " | |_) / _ \\/ __| '_ \\ / _ \\| '_ \\ / _` |/ _ \\ '__|".to_string(),
            " |  _ <  __/\\__ \\ |_) | (_) | | | | (_| |  __/ |   ".to_string(),
            " |_| \\_\\___||___/ .__/ \\___/|_| |_|\\__,_|\\___|_|   ".to_string(),
            "                |_|                                ".to_string(),
        ],
    );

    // Junior Dev
    patterns.insert(
        "Junior Dev".to_string(),
        vec![
            "      _             _              ____             ".to_string(),
            "     | |_   _ _ __ (_) ___  _ __  |  _ \\  _____   __".to_string(),
            "  _  | | | | | '_ \\| |/ _ \\| '__| | | | |/ _ \\ \\ / /".to_string(),
            " | |_| | |_| | | | | | (_) | |    | |_| |  __/\\ V / ".to_string(),
            "  \\___/ \\__,_|_| |_|_|\\___/|_|    |____/ \\___| \\_/  ".to_string(),
            "                                                    ".to_string(),
        ],
    );

    // Kernel Hacker
    patterns.insert(
        "Kernel Hacker".to_string(),
        vec![
            "  _  __                    _   _   _            _             ".to_string(),
            " | |/ /___ _ __ _ __   ___| | | | | | __ _  ___| | _____ _ __ ".to_string(),
            " | ' // _ \\ '__| '_ \\ / _ \\ | | |_| |/ _` |/ __| |/ / _ \\ '__|".to_string(),
            " | . \\  __/ |  | | | |  __/ | |  _  | (_| | (__|   <  __/ |   ".to_string(),
            " |_|\\_\\___|_|  |_| |_|\\___|_| |_| |_|\\__,_|\\___|_|\\_\\___|_|   ".to_string(),
            "                                                              ".to_string(),
        ],
    );

    // Kernel Panic
    patterns.insert(
        "Kernel Panic".to_string(),
        vec![
            "  _  __                    _   ____             _      ".to_string(),
            " | |/ /___ _ __ _ __   ___| | |  _ \\ __ _ _ __ (_) ___ ".to_string(),
            " | ' // _ \\ '__| '_ \\ / _ \\ | | |_) / _` | '_ \\| |/ __|".to_string(),
            " | . \\  __/ |  | | | |  __/ | |  __/ (_| | | | | | (__ ".to_string(),
            " |_|\\_\\___|_|  |_| |_|\\___|_| |_|   \\__,_|_| |_|_|\\___|".to_string(),
            "                                                       ".to_string(),
        ],
    );

    // Linter Apprentice
    patterns.insert(
        "Linter Apprentice".to_string(),
        vec![
            "  _     _       _                                   ".to_string(),
            " | |   (_)_ __ | |_ ___ _ __                        ".to_string(),
            " | |   | | '_ \\| __/ _ \\ '__|                       ".to_string(),
            " | |___| | | | | ||  __/ |                          ".to_string(),
            " |_____|_|_| |_|\\__\\___|_|           _   _          ".to_string(),
            "    / \\   _ __  _ __  _ __ ___ _ __ | |_(_) ___ ___ ".to_string(),
            "   / _ \\ | '_ \\| '_ \\| '__/ _ \\ '_ \\| __| |/ __/ _ \\".to_string(),
            "  / ___ \\| |_) | |_) | | |  __/ | | | |_| | (_|  __/".to_string(),
            " /_/   \\_\\ .__/| .__/|_|  \\___|_| |_|\\__|_|\\___\\___|".to_string(),
            "         |_|   |_|                                  ".to_string(),
        ],
    );

    // Load Balancer Primarch
    patterns.insert(
        "Load Balancer Primarch".to_string(),
        vec![
            "  _                    _   ____        _                           ".to_string(),
            " | |    ___   __ _  __| | | __ )  __ _| | __ _ _ __   ___ ___ _ __ ".to_string(),
            " | |   / _ \\ / _` |/ _` | |  _ \\ / _` | |/ _` | '_ \\ / __/ _ \\ '__|".to_string(),
            " | |__| (_) | (_| | (_| | | |_) | (_| | | (_| | | | | (_|  __/ |   ".to_string(),
            " |_____\\___/ \\__,_|\\__,_| |____/ \\__,_|_|\\__,_|_| |_|\\___\\___|_|   "
                .to_string(),
            " |  _ \\ _ __(_)_ __ ___   __ _ _ __ ___| |__                       ".to_string(),
            " | |_) | '__| | '_ ` _ \\ / _` | '__/ __| '_ \\                      ".to_string(),
            " |  __/| |  | | | | | | | (_| | | | (__| | | |                     ".to_string(),
            " |_|   |_|  |_|_| |_| |_|\\__,_|_|  \\___|_| |_|                     ".to_string(),
            "                                                                   ".to_string(),
        ],
    );

    // Memory Leak
    patterns.insert(
        "Memory Leak".to_string(),
        vec![
            "  __  __                                   _               _    ".to_string(),
            " |  \\/  | ___ _ __ ___   ___  _ __ _   _  | |    ___  __ _| | __".to_string(),
            " | |\\/| |/ _ \\ '_ ` _ \\ / _ \\| '__| | | | | |   / _ \\/ _` | |/ /".to_string(),
            " | |  | |  __/ | | | | | (_) | |  | |_| | | |__|  __/ (_| |   < ".to_string(),
            " |_|  |_|\\___|_| |_| |_|\\___/|_|   \\__, | |_____\\___|\\__,_|_|\\_\\".to_string(),
            "                                   |___/                        ".to_string(),
        ],
    );

    // Merge Wrangler
    patterns.insert(
        "Merge Wrangler".to_string(),
        vec![
            "  __  __                      __        __                     _           "
                .to_string(),
            " |  \\/  | ___ _ __ __ _  ___  \\ \\      / / __ __ _ _ __   __ _| | ___ _ __ "
                .to_string(),
            " | |\\/| |/ _ \\ '__/ _` |/ _ \\  \\ \\ /\\ / / '__/ _` | '_ \\ / _` | |/ _ \\ '__|"
                .to_string(),
            " | |  | |  __/ | | (_| |  __/   \\ V  V /| | | (_| | | | | (_| | |  __/ |   "
                .to_string(),
            " |_|  |_|\\___|_|  \\__, |\\___|    \\_/\\_/ |_|  \\__,_|_| |_|\\__, |_|\\___|_|   "
                .to_string(),
            "                  |___/                                  |___/             "
                .to_string(),
        ],
    );

    // Network Stack
    patterns.insert(
        "Network Stack".to_string(),
        vec![
            "  _   _      _                      _      ____  _             _    ".to_string(),
            " | \\ | | ___| |___      _____  _ __| | __ / ___|| |_ __ _  ___| | __".to_string(),
            " |  \\| |/ _ \\ __\\ \\ /\\ / / _ \\| '__| |/ / \\___ \\| __/ _` |/ __| |/ /"
                .to_string(),
            " | |\\  |  __/ |_ \\ V  V / (_) | |  |   <   ___) | || (_| | (__|   < ".to_string(),
            " |_| \\_|\\___|\\__| \\_/\\_/ \\___/|_|  |_|\\_\\ |____/ \\__\\__,_|\\___|_|\\_\\"
                .to_string(),
            "                                                                    ".to_string(),
        ],
    );

    // Null Pointer Exception
    patterns.insert(
        "Null Pointer Exception".to_string(),
        vec![
            "  _   _       _ _   ____       _       _            ".to_string(),
            " | \\ | |_   _| | | |  _ \\ ___ (_)_ __ | |_ ___ _ __ ".to_string(),
            " |  \\| | | | | | | | |_) / _ \\| | '_ \\| __/ _ \\ '__|".to_string(),
            " | |\\  | |_| | | | |  __/ (_) | | | | | ||  __/ |   ".to_string(),
            " |_|_\\_|\\__,_|_|_| |_|   \\___/|_|_| |_|\\__\\___|_|   ".to_string(),
            " | ____|_  _____ ___ _ __ | |_(_) ___  _ __         ".to_string(),
            " |  _| \\ \\/ / __/ _ \\ '_ \\| __| |/ _ \\| '_ \\        ".to_string(),
            " | |___ >  < (_|  __/ |_) | |_| | (_) | | | |       ".to_string(),
            " |_____/_/\\_\\___\\___| .__/ \\__|_|\\___/|_| |_|       ".to_string(),
            "                    |_|                             ".to_string(),
        ],
    );

    // Operating System
    patterns.insert(
        "Operating System".to_string(),
        vec![
            "   ___                       _   _             ".to_string(),
            "  / _ \\ _ __   ___ _ __ __ _| |_(_)_ __   __ _ ".to_string(),
            " | | | | '_ \\ / _ \\ '__/ _` | __| | '_ \\ / _` |".to_string(),
            " | |_| | |_) |  __/ | | (_| | |_| | | | | (_| |".to_string(),
            "  \\___/| .__/ \\___|_|  \\__,_|\\__|_|_| |_|\\__, |".to_string(),
            " / ___||_|  _ ___| |_ ___ _ __ ___       |___/ ".to_string(),
            " \\___ \\| | | / __| __/ _ \\ '_ ` _ \\            ".to_string(),
            "  ___) | |_| \\__ \\ ||  __/ | | | | |           ".to_string(),
            " |____/ \\__, |___/\\__\\___|_| |_| |_|           ".to_string(),
            "        |___/                                  ".to_string(),
        ],
    );

    // Origin
    patterns.insert(
        "Origin".to_string(),
        vec![
            "   ___       _       _       ".to_string(),
            "  / _ \\ _ __(_) __ _(_)_ __  ".to_string(),
            " | | | | '__| |/ _` | | '_ \\ ".to_string(),
            " | |_| | |  | | (_| | | | | |".to_string(),
            "  \\___/|_|  |_|\\__, |_|_| |_|".to_string(),
            "               |___/         ".to_string(),
        ],
    );

    // Performance Alchemist
    patterns.insert(
        "Performance Alchemist".to_string(),
        vec![
            "  ____            __                                           ".to_string(),
            " |  _ \\ ___ _ __ / _| ___  _ __ _ __ ___   __ _ _ __   ___ ___ ".to_string(),
            " | |_) / _ \\ '__| |_ / _ \\| '__| '_ ` _ \\ / _` | '_ \\ / __/ _ \\".to_string(),
            " |  __/  __/ |  |  _| (_) | |  | | | | | | (_| | | | | (_|  __/".to_string(),
            " |_| _ \\___|_|  |_|  \\___/|_|  |_| |_|_|_|\\__,_|_| |_|\\___\\___|".to_string(),
            "    / \\  | | ___| |__   ___ _ __ ___ (_)___| |_                ".to_string(),
            "   / _ \\ | |/ __| '_ \\ / _ \\ '_ ` _ \\| / __| __|               ".to_string(),
            "  / ___ \\| | (__| | | |  __/ | | | | | \\__ \\ |_                ".to_string(),
            " /_/   \\_\\_|\\___|_| |_|\\___|_| |_| |_|_|___/\\__|               ".to_string(),
            "                                                               ".to_string(),
        ],
    );

    // Protocol Artisan
    patterns.insert(
        "Protocol Artisan".to_string(),
        vec![
            "  ____            _                  _      _         _   _                 "
                .to_string(),
            " |  _ \\ _ __ ___ | |_ ___   ___ ___ | |    / \\   _ __| |_(_)___  __ _ _ __  "
                .to_string(),
            " | |_) | '__/ _ \\| __/ _ \\ / __/ _ \\| |   / _ \\ | '__| __| / __|/ _` | '_ \\ "
                .to_string(),
            " |  __/| | | (_) | || (_) | (_| (_) | |  / ___ \\| |  | |_| \\__ \\ (_| | | | |"
                .to_string(),
            " |_|   |_|  \\___/ \\__\\___/ \\___\\___/|_| /_/   \\_\\_|   \\__|_|___/\\__,_|_| |_|"
                .to_string(),
            "                                                                            "
                .to_string(),
        ],
    );

    // Quantum Computer
    patterns.insert(
        "Quantum Computer".to_string(),
        vec![
            "   ___                    _                     ".to_string(),
            "  / _ \\ _   _  __ _ _ __ | |_ _   _ _ __ ___    ".to_string(),
            " | | | | | | |/ _` | '_ \\| __| | | | '_ ` _ \\   ".to_string(),
            " | |_| | |_| | (_| | | | | |_| |_| | | | | | |  ".to_string(),
            "  \\__\\_\\\\__,_|\\__,_|_| |_|\\__|\\__,_|_| |_| |_|  ".to_string(),
            "  / ___|___  _ __ ___  _ __  _   _| |_ ___ _ __ ".to_string(),
            " | |   / _ \\| '_ ` _ \\| '_ \\| | | | __/ _ \\ '__|".to_string(),
            " | |__| (_) | | | | | | |_) | |_| | ||  __/ |   ".to_string(),
            "  \\____\\___/|_| |_| |_| .__/ \\__,_|\\__\\___|_|   ".to_string(),
            "                      |_|                       ".to_string(),
        ],
    );

    // Query Optimizer
    patterns.insert(
        "Query Optimizer".to_string(),
        vec![
            "   ___                           ___        _   _           _              "
                .to_string(),
            "  / _ \\ _   _  ___ _ __ _   _   / _ \\ _ __ | |_(_)_ __ ___ (_)_______ _ __ "
                .to_string(),
            " | | | | | | |/ _ \\ '__| | | | | | | | '_ \\| __| | '_ ` _ \\| |_  / _ \\ '__|"
                .to_string(),
            " | |_| | |_| |  __/ |  | |_| | | |_| | |_) | |_| | | | | | | |/ /  __/ |   "
                .to_string(),
            "  \\__\\_\\\\__,_|\\___|_|   \\__, |  \\___/| .__/ \\__|_|_| |_| |_|_/___\\___|_|   "
                .to_string(),
            "                        |___/        |_|                                   "
                .to_string(),
        ],
    );

    // Refactorer
    patterns.insert(
        "Refactorer".to_string(),
        vec![
            "  ____       __            _                      ".to_string(),
            " |  _ \\ ___ / _| __ _  ___| |_ ___  _ __ ___ _ __ ".to_string(),
            " | |_) / _ \\ |_ / _` |/ __| __/ _ \\| '__/ _ \\ '__|".to_string(),
            " |  _ <  __/  _| (_| | (__| || (_) | | |  __/ |   ".to_string(),
            " |_| \\_\\___|_|  \\__,_|\\___|\\__\\___/|_|  \\___|_|   ".to_string(),
            "                                                  ".to_string(),
        ],
    );

    // Release Handler
    patterns.insert(
        "Release Handler".to_string(),
        vec![
            "  ____      _                       _   _                 _ _           ".to_string(),
            " |  _ \\ ___| | ___  __ _ ___  ___  | | | | __ _ _ __   __| | | ___ _ __ ".to_string(),
            " | |_) / _ \\ |/ _ \\/ _` / __|/ _ \\ | |_| |/ _` | '_ \\ / _` | |/ _ \\ '__|"
                .to_string(),
            " |  _ <  __/ |  __/ (_| \\__ \\  __/ |  _  | (_| | | | | (_| | |  __/ |   "
                .to_string(),
            " |_| \\_\\___|_|\\___|\\__,_|___/\\___| |_| |_|\\__,_|_| |_|\\__,_|_|\\___|_|   "
                .to_string(),
            "                                                                        ".to_string(),
        ],
    );

    // Reliability Guardian
    patterns.insert(
        "Reliability Guardian".to_string(),
        vec![
            "  ____      _ _       _     _ _ _ _         ".to_string(),
            " |  _ \\ ___| (_) __ _| |__ (_) (_) |_ _   _ ".to_string(),
            " | |_) / _ \\ | |/ _` | '_ \\| | | | __| | | |".to_string(),
            " |  _ <  __/ | | (_| | |_) | | | | |_| |_| |".to_string(),
            " |_|_\\_\\___|_|_|\\__,_|_.__/|_|_|_|\\__|\\__, |".to_string(),
            "  / ___|_   _  __ _ _ __ __| (_) __ _ |___/ ".to_string(),
            " | |  _| | | |/ _` | '__/ _` | |/ _` | '_ \\ ".to_string(),
            " | |_| | |_| | (_| | | | (_| | | (_| | | | |".to_string(),
            "  \\____|\\__,_|\\__,_|_|  \\__,_|_|\\__,_|_| |_|".to_string(),
            "                                            ".to_string(),
        ],
    );

    // Rubber Duck
    patterns.insert(
        "Rubber Duck".to_string(),
        vec![
            "  ____        _     _                 ____             _    ".to_string(),
            " |  _ \\ _   _| |__ | |__   ___ _ __  |  _ \\ _   _  ___| | __".to_string(),
            " | |_) | | | | '_ \\| '_ \\ / _ \\ '__| | | | | | | |/ __| |/ /".to_string(),
            " |  _ <| |_| | |_) | |_) |  __/ |    | |_| | |_| | (__|   < ".to_string(),
            " |_| \\_\\\\__,_|_.__/|_.__/ \\___|_|    |____/ \\__,_|\\___|_|\\_\\".to_string(),
            "                                                            ".to_string(),
        ],
    );

    // Script Kid
    patterns.insert(
        "Script Kid".to_string(),
        vec![
            "  ____            _       _     _  ___     _ ".to_string(),
            " / ___|  ___ _ __(_)_ __ | |_  | |/ (_) __| |".to_string(),
            " \\___ \\ / __| '__| | '_ \\| __| | ' /| |/ _` |".to_string(),
            "  ___) | (__| |  | | |_) | |_  | . \\| | (_| |".to_string(),
            " |____/ \\___|_|  |_| .__/ \\__| |_|\\_\\_|\\__,_|".to_string(),
            "                   |_|                       ".to_string(),
        ],
    );

    // Security Engineer
    patterns.insert(
        "Security Engineer".to_string(),
        vec![
            "  ____                       _ _           ".to_string(),
            " / ___|  ___  ___ _   _ _ __(_) |_ _   _   ".to_string(),
            " \\___ \\ / _ \\/ __| | | | '__| | __| | | |  ".to_string(),
            "  ___) |  __/ (__| |_| | |  | | |_| |_| |  ".to_string(),
            " |____/ \\___|\\___|\\__,_|_|  |_|\\__|\\__, |  ".to_string(),
            " | ____|_ __   __ _(_)_ __   ___  _|___/__ ".to_string(),
            " |  _| | '_ \\ / _` | | '_ \\ / _ \\/ _ \\ '__|".to_string(),
            " | |___| | | | (_| | | | | |  __/  __/ |   ".to_string(),
            " |_____|_| |_|\\__, |_|_| |_|\\___|\\___|_|   ".to_string(),
            "              |___/                        ".to_string(),
        ],
    );

    // SegFault
    patterns.insert(
        "SegFault".to_string(),
        vec![
            "  ____             _____           _ _   ".to_string(),
            " / ___|  ___  __ _|  ___|_ _ _   _| | |_ ".to_string(),
            " \\___ \\ / _ \\/ _` | |_ / _` | | | | | __|".to_string(),
            "  ___) |  __/ (_| |  _| (_| | |_| | | |_ ".to_string(),
            " |____/ \\___|\\__, |_|  \\__,_|\\__,_|_|\\__|".to_string(),
            "             |___/                       ".to_string(),
        ],
    );

    // Senior Dev
    patterns.insert(
        "Senior Dev".to_string(),
        vec![
            "  ____             _              ____             ".to_string(),
            " / ___|  ___ _ __ (_) ___  _ __  |  _ \\  _____   __".to_string(),
            " \\___ \\ / _ \\ '_ \\| |/ _ \\| '__| | | | |/ _ \\ \\ / /".to_string(),
            "  ___) |  __/ | | | | (_) | |    | |_| |  __/\\ V / ".to_string(),
            " |____/ \\___|_| |_|_|\\___/|_|    |____/ \\___| \\_/  ".to_string(),
            "                                                   ".to_string(),
        ],
    );

    // Singularity
    patterns.insert(
        "Singularity".to_string(),
        vec![
            "  ____  _                   _            _ _         ".to_string(),
            " / ___|(_)_ __   __ _ _   _| | __ _ _ __(_) |_ _   _ ".to_string(),
            " \\___ \\| | '_ \\ / _` | | | | |/ _` | '__| | __| | | |".to_string(),
            "  ___) | | | | | (_| | |_| | | (_| | |  | | |_| |_| |".to_string(),
            " |____/|_|_| |_|\\__, |\\__,_|_|\\__,_|_|  |_|\\__|\\__, |".to_string(),
            "                |___/                          |___/ ".to_string(),
        ],
    );

    // Stream Processor
    patterns.insert(
        "Stream Processor".to_string(),
        vec![
            "  ____  _                                      ".to_string(),
            " / ___|| |_ _ __ ___  __ _ _ __ ___            ".to_string(),
            " \\___ \\| __| '__/ _ \\/ _` | '_ ` _ \\           ".to_string(),
            "  ___) | |_| | |  __/ (_| | | | | | |          ".to_string(),
            " |____/ \\__|_|  \\___|\\__,_|_| |_| |_|          ".to_string(),
            " |  _ \\ _ __ ___   ___ ___  ___ ___  ___  _ __ ".to_string(),
            " | |_) | '__/ _ \\ / __/ _ \\/ __/ __|/ _ \\| '__|".to_string(),
            " |  __/| | | (_) | (_|  __/\\__ \\__ \\ (_) | |   ".to_string(),
            " |_|   |_|  \\___/ \\___\\___||___/___/\\___/|_|   ".to_string(),
            "                                               ".to_string(),
        ],
    );

    // Syntax Error
    patterns.insert(
        "Syntax Error".to_string(),
        vec![
            "  ____              _               _____                     ".to_string(),
            " / ___| _   _ _ __ | |_ __ ___  __ | ____|_ __ _ __ ___  _ __ ".to_string(),
            " \\___ \\| | | | '_ \\| __/ _` \\ \\/ / |  _| | '__| '__/ _ \\| '__|".to_string(),
            "  ___) | |_| | | | | || (_| |>  <  | |___| |  | | | (_) | |   ".to_string(),
            " |____/ \\__, |_| |_|\\__\\__,_/_/\\_\\ |_____|_|  |_|  \\___/|_|   ".to_string(),
            "        |___/                                                 ".to_string(),
        ],
    );

    // Tab Tamer
    patterns.insert(
        "Tab Tamer".to_string(),
        vec![
            "  _____     _       _____                         ".to_string(),
            " |_   _|_ _| |__   |_   _|_ _ _ __ ___   ___ _ __ ".to_string(),
            "   | |/ _` | '_ \\    | |/ _` | '_ ` _ \\ / _ \\ '__|".to_string(),
            "   | | (_| | |_) |   | | (_| | | | | | |  __/ |   ".to_string(),
            "   |_|\\__,_|_.__/    |_|\\__,_|_| |_| |_|\\___|_|   ".to_string(),
            "                                                  ".to_string(),
        ],
    );

    // Tech Lead
    patterns.insert(
        "Tech Lead".to_string(),
        vec![
            "  _____         _       _                   _ ".to_string(),
            " |_   _|__  ___| |__   | |    ___  __ _  __| |".to_string(),
            "   | |/ _ \\/ __| '_ \\  | |   / _ \\/ _` |/ _` |".to_string(),
            "   | |  __/ (__| | | | | |__|  __/ (_| | (_| |".to_string(),
            "   |_|\\___|\\___|_| |_| |_____\\___|\\__,_|\\__,_|".to_string(),
            "                                              ".to_string(),
        ],
    );

    // Test Pilot
    patterns.insert(
        "Test Pilot".to_string(),
        vec![
            "  _____         _     ____  _ _       _   ".to_string(),
            " |_   _|__  ___| |_  |  _ \\(_) | ___ | |_ ".to_string(),
            "   | |/ _ \\/ __| __| | |_) | | |/ _ \\| __|".to_string(),
            "   | |  __/\\__ \\ |_  |  __/| | | (_) | |_ ".to_string(),
            "   |_|\\___||___/\\__| |_|   |_|_|\\___/ \\__|".to_string(),
            "                                          ".to_string(),
        ],
    );

    // The Machine
    patterns.insert(
        "The Machine".to_string(),
        vec![
            "  _____ _            __  __            _     _            ".to_string(),
            " |_   _| |__   ___  |  \\/  | __ _  ___| |__ (_)_ __   ___ ".to_string(),
            "   | | | '_ \\ / _ \\ | |\\/| |/ _` |/ __| '_ \\| | '_ \\ / _ \\".to_string(),
            "   | | | | | |  __/ | |  | | (_| | (__| | | | | | | |  __/".to_string(),
            "   |_| |_| |_|\\___| |_|  |_|\\__,_|\\___|_| |_|_|_| |_|\\___|".to_string(),
            "                                                          ".to_string(),
        ],
    );

    // Ticket Picker
    patterns.insert(
        "Ticket Picker".to_string(),
        vec![
            "  _____ _      _        _     ____  _      _             ".to_string(),
            " |_   _(_) ___| | _____| |_  |  _ \\(_) ___| | _____ _ __ ".to_string(),
            "   | | | |/ __| |/ / _ \\ __| | |_) | |/ __| |/ / _ \\ '__|".to_string(),
            "   | | | | (__|   <  __/ |_  |  __/| | (__|   <  __/ |   ".to_string(),
            "   |_| |_|\\___|_|\\_\\___|\\__| |_|   |_|\\___|_|\\_\\___|_|   ".to_string(),
            "                                                         ".to_string(),
        ],
    );

    // Undefined Behavior
    patterns.insert(
        "Undefined Behavior".to_string(),
        vec![
            "  _   _           _       __ _                _ ".to_string(),
            " | | | |_ __   __| | ___ / _(_)_ __   ___  __| |".to_string(),
            " | | | | '_ \\ / _` |/ _ \\ |_| | '_ \\ / _ \\/ _` |".to_string(),
            " | |_| | | | | (_| |  __/  _| | | | |  __/ (_| |".to_string(),
            "  \\___/|_| |_|\\__,_|\\___|_| |_|_| |_|\\___|\\__,_|".to_string(),
            " | __ )  ___| |__   __ ___   _(_) ___  _ __     ".to_string(),
            " |  _ \\ / _ \\ '_ \\ / _` \\ \\ / / |/ _ \\| '__|    ".to_string(),
            " | |_) |  __/ | | | (_| |\\ V /| | (_) | |       ".to_string(),
            " |____/ \\___|_| |_|\\__,_| \\_/ |_|\\___/|_|       ".to_string(),
            "                                                ".to_string(),
        ],
    );

    // Unit Test Trainee
    patterns.insert(
        "Unit Test Trainee".to_string(),
        vec![
            "  _   _       _ _     _____         _     _____          _                 "
                .to_string(),
            " | | | |_ __ (_) |_  |_   _|__  ___| |_  |_   _| __ __ _(_)_ __   ___  ___ "
                .to_string(),
            " | | | | '_ \\| | __|   | |/ _ \\/ __| __|   | || '__/ _` | | '_ \\ / _ \\/ _ \\"
                .to_string(),
            " | |_| | | | | | |_    | |  __/\\__ \\ |_    | || | | (_| | | | | |  __/  __/"
                .to_string(),
            "  \\___/|_| |_|_|\\__|   |_|\\___||___/\\__|   |_||_|  \\__,_|_|_| |_|\\___|\\___|"
                .to_string(),
            "                                                                           "
                .to_string(),
        ],
    );

    // Virtual Machine
    patterns.insert(
        "Virtual Machine".to_string(),
        vec![
            " __     ___      _               _   __  __            _     _            "
                .to_string(),
            " \\ \\   / (_)_ __| |_ _   _  __ _| | |  \\/  | __ _  ___| |__ (_)_ __   ___ "
                .to_string(),
            "  \\ \\ / /| | '__| __| | | |/ _` | | | |\\/| |/ _` |/ __| '_ \\| | '_ \\ / _ \\"
                .to_string(),
            "   \\ V / | | |  | |_| |_| | (_| | | | |  | | (_| | (__| | | | | | | |  __/"
                .to_string(),
            "    \\_/  |_|_|   \\__|\\__,_|\\__,_|_| |_|  |_|\\__,_|\\___|_| |_|_|_| |_|\\___|"
                .to_string(),
            "                                                                          "
                .to_string(),
        ],
    );

    patterns
}

pub fn get_rank_display(rank_name: &str) -> Vec<String> {
    let patterns = get_all_rank_patterns();
    patterns
        .get(rank_name)
        .cloned()
        .unwrap_or_else(|| vec![rank_name.to_string()])
}
